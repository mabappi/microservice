version: '3.9'

services:
  nginx:
    image: nginx
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/config:/etc/nginx/conf.d
      - ./nginx/certificates:/etc/nginx/cert:ro
    networks:
       - local

  seq:
    image: datalust/seq:latest
    container_name: seq
    environment:
      - ACCEPT_EULA=Y
    ports:
    - "80"
    - "5341"
    networks: 
      - local

  core.identityprovider:
    image: ${DOCKER_REGISTRY-}coreidentityprovider
    container_name: identityservice
    build:
      context: .
      dockerfile: Core.IdentityProvider/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    ports:
      - "8080:80"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    networks: 
      - local

  core.dashboard:
    image: ${DOCKER_REGISTRY-}coredashboardcontainer
    container_name: dashboard
    build:
      context: .
      dockerfile: Core.Dashboard/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    ports:
      - "8000:80"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    networks: 
      - local

  core.login:
    image: ${DOCKER_REGISTRY-}corelogin
    container_name: login
    build:
      context: .
      dockerfile: Core.Login/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    ports:
      - "80"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    networks: 
      - local
    
networks:
  local:

